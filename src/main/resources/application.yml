spring:
  profiles:
    active: security
  jmx:
    enabled: false
  jpa:
    open-in-view: false
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:3542/db}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:password}
    driver-class-name: ${DB_DRIVER:org.postgresql.Driver}
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope:
              - user:email
              - read:user
          facebook:
            client-id: ${FB_CLIENT_ID}
            client-secret: ${FB_CLIENT_SECRET}
            scope:
              - email
              - public_profile
          instagram:
            client-id: ${INSTAGRAM_CLIENT_ID}
            client-secret: ${INSTAGRAM_CLIENT_SECRET}
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            authorization-grant-type: authorization_code
            scope:
              - email
              - public_profile
          discord:
            client-id: ${DISCORD_CLIENT_ID}
            client-secret: ${DISCORD_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirectUri: "{baseUrl}/login/oauth2/code/discord"
            scope:
              - identify
              - email
        provider:
          instagram:
            authorization-uri: https://api.instagram.com/oauth/authorize
            token-uri: https://api.instagram.com/oauth/access_token
          discord:
            authorization-uri: https://discord.com/oauth2/authorize
            token-uri: https://discord.com/api/oauth2/token
            user-info-uri: https://discord.com/api/users/@me
            user-name-attribute: username
